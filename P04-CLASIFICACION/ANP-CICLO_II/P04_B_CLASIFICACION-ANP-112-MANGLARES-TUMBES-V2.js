/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var c1_area_urbana = /* color: #ff0000 */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-69.99373763967839, -15.812429788845785]),
            {
              "clase": 1,
              "system:index": "0"
            })]),
    c2_mineria = /* color: #b40b0b */ee.FeatureCollection([]),
    c3_agricultura = /* color: #ffbd08 */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-70.02674254616082, -15.781012495495412]),
            {
              "clase": 3,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Point([-77.68739808620954, -7.595112829488631]),
            {
              "clase": 3,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30099210871448, -3.4620301451006834]),
            {
              "clase": 3,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29830989969959, -3.4608521261728824]),
            {
              "clase": 3,
              "system:index": "3"
            }),
        ee.Feature(
            ee.Geometry.Point([-79.15354514864107, -5.137651120139052]),
            {
              "clase": 3,
              "system:index": "4"
            })]),
    c4_bosque_seco = /* color: #5bdd4a */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-77.69562114248811, -7.588973014577623]),
            {
              "clase": 4,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Point([-75.183452097976, -14.877545868227934]),
            {
              "clase": 4,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Point([-71.84034163709364, -17.158555174612033]),
            {
              "clase": 4,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Point([-71.84221918340407, -17.158801206060648]),
            {
              "clase": 4,
              "system:index": "3"
            })]),
    c5_bosque = /* color: #139b01 */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-74.92471500620302, -11.298996766488536]),
            {
              "clase": 5,
              "system:index": "0"
            })]),
    c6_manglar = /* color: #17ff7e */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-80.3042656325924, -3.4280808924721993]),
            {
              "clase": 6,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30428709026452, -3.428894824638792]),
            {
              "clase": 6,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30802072521325, -3.4284450201060412]),
            {
              "clase": 6,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30660451885339, -3.4288519861209807]),
            {
              "clase": 6,
              "system:index": "3"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.3030210876095, -3.427438313956674]),
            {
              "clase": 6,
              "system:index": "4"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30057491298791, -3.427224121022249]),
            {
              "clase": 6,
              "system:index": "5"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29990972515222, -3.4280808924721993]),
            {
              "clase": 6,
              "system:index": "6"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29967369075891, -3.4263245101740334]),
            {
              "clase": 6,
              "system:index": "7"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30409397121545, -3.4262602522239387]),
            {
              "clase": 6,
              "system:index": "8"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30769886013147, -3.4264744453741325]),
            {
              "clase": 6,
              "system:index": "9"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30911506649133, -3.427888118962857]),
            {
              "clase": 6,
              "system:index": "10"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.28568376844572, -3.437378957164361]),
            {
              "clase": 6,
              "system:index": "11"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.28479327505278, -3.4383963623590765]),
            {
              "clase": 6,
              "system:index": "12"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.2470723990788, -3.4415612295539044]),
            {
              "clase": 6,
              "system:index": "13"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.24653595727582, -3.440168995214674]),
            {
              "clase": 6,
              "system:index": "14"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.24400395196577, -3.443360421686419]),
            {
              "clase": 6,
              "system:index": "15"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.24338167947431, -3.4441957597353308]),
            {
              "clase": 6,
              "system:index": "16"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.24479788583417, -3.4445170434051446]),
            {
              "clase": 6,
              "system:index": "17"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.2487460975041, -3.442974880801293]),
            {
              "clase": 6,
              "system:index": "18"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29790635911094, -3.4366223963816567]),
            {
              "clase": 6,
              "system:index": "19"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29817458001243, -3.4360119522598707]),
            {
              "clase": 6,
              "system:index": "20"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29858227578269, -3.435005254083251]),
            {
              "clase": 6,
              "system:index": "21"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29879685250388, -3.435519312859301]),
            {
              "clase": 6,
              "system:index": "22"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.2988719543563, -3.435733503934272]),
            {
              "clase": 6,
              "system:index": "23"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29958005753623, -3.4377897358076366]),
            {
              "clase": 6,
              "system:index": "24"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29630776253806, -3.434287713245451]),
            {
              "clase": 6,
              "system:index": "25"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29597516862022, -3.435272993063656]),
            {
              "clase": 6,
              "system:index": "26"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29627557602988, -3.4355300224141945]),
            {
              "clase": 6,
              "system:index": "27"
            })]),
    c7_bosque_plantado = /* color: #0f5e00 */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-70.01386794288933, -15.802486206646622]),
            {
              "clase": 7,
              "system:index": "0"
            })]),
    c8_pastizales = /* color: #ffec13 */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-70.01039086106388, -15.798535372037525]),
            {
              "clase": 8,
              "system:index": "0"
            })]),
    c9_arbustal_matorral = /* color: #ceb747 */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-74.42461002368624, -14.725342189207296]),
            {
              "clase": 9,
              "system:index": "0"
            })]),
    c10_poca_vegetacion = /* color: #f8b3ff */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-70.0046543568059, -15.797679391023799]),
            {
              "clase": 10,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Point([-75.17948242863396, -14.876446733314484]),
            {
              "clase": 10,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.25617280699278, -3.43697862885805]),
            {
              "clase": 10,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.2579967091229, -3.4385422202079554]),
            {
              "clase": 10,
              "system:index": "3"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.25823274351622, -3.43759978189297]),
            {
              "clase": 10,
              "system:index": "4"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.25737443663145, -3.4369357907027966]),
            {
              "clase": 10,
              "system:index": "5"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.25072255827452, -3.433637246973997]),
            {
              "clase": 10,
              "system:index": "6"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.2601210186627, -3.4401058089939913]),
            {
              "clase": 10,
              "system:index": "7"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.26544252134825, -3.4303601110770443]),
            {
              "clase": 10,
              "system:index": "8"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.2938469114268, -3.4126036262292114]),
            {
              "clase": 10,
              "system:index": "9"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29873926066996, -3.412774983193692]),
            {
              "clase": 10,
              "system:index": "10"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.3011425199473, -3.4087052470340744]),
            {
              "clase": 10,
              "system:index": "11"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29264528178813, -3.4171445754577925]),
            {
              "clase": 10,
              "system:index": "12"
            }),
        ee.Feature(
            ee.Geometry.LineString(
                [[-80.29453793712776, -3.4124829290461514],
                 [-80.2939156646363, -3.4129327410692483],
                 [-80.29337922283332, -3.412702480178977],
                 [-80.29323974796455, -3.4121455698906296],
                 [-80.2939693088166, -3.4116796927668838]]),
            {
              "clase": 10,
              "system:index": "13"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29423216530006, -3.41247757413984]),
            {
              "clase": 10,
              "system:index": "14"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29335240074317, -3.4123276367511886]),
            {
              "clase": 10,
              "system:index": "15"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29296616264503, -3.4122205386020927]),
            {
              "clase": 10,
              "system:index": "16"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29391030021827, -3.413227260732195]),
            {
              "clase": 10,
              "system:index": "17"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29384592720191, -3.4134200371899492]),
            {
              "clase": 10,
              "system:index": "18"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29307345100563, -3.4122419582328685]),
            {
              "clase": 10,
              "system:index": "19"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29951075264137, -3.4109996188589693]),
            {
              "clase": 10,
              "system:index": "20"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.3007767552964, -3.4105283862626217]),
            {
              "clase": 10,
              "system:index": "21"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30030468650978, -3.410292769877841]),
            {
              "clase": 10,
              "system:index": "22"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30026177116554, -3.410721163261783]),
            {
              "clase": 10,
              "system:index": "23"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29996136375587, -3.409821536935042]),
            {
              "clase": 10,
              "system:index": "24"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.2993176335923, -3.4114708512243195]),
            {
              "clase": 10,
              "system:index": "25"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29970387169044, -3.412284797492983]),
            {
              "clase": 10,
              "system:index": "26"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30034760185401, -3.4118778244448187]),
            {
              "clase": 10,
              "system:index": "27"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30073383995216, -3.4111281367997015]),
            {
              "clase": 10,
              "system:index": "28"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30118445106666, -3.410699743597115]),
            {
              "clase": 10,
              "system:index": "29"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30092695900123, -3.4094145628440624]),
            {
              "clase": 10,
              "system:index": "30"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30045489021461, -3.4094788219225167]),
            {
              "clase": 10,
              "system:index": "31"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29348114677589, -3.412306217122321]),
            {
              "clase": 10,
              "system:index": "32"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29333094307106, -3.41290596654996]),
            {
              "clase": 10,
              "system:index": "33"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29313782402198, -3.4124347348883264]),
            {
              "clase": 10,
              "system:index": "34"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29288033195655, -3.4123918956349035]),
            {
              "clase": 10,
              "system:index": "35"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29348114677589, -3.413098743072191]),
            {
              "clase": 10,
              "system:index": "36"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30415425752297, -3.403005172915338]),
            {
              "clase": 10,
              "system:index": "37"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30458341096535, -3.4027481348472803]),
            {
              "clase": 10,
              "system:index": "38"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30608544801369, -3.4027481348472803]),
            {
              "clase": 10,
              "system:index": "39"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30608544801369, -3.403090852256111]),
            {
              "clase": 10,
              "system:index": "40"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30634294007912, -3.404290362226982]),
            {
              "clase": 10,
              "system:index": "41"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30685792420998, -3.401505783218564]),
            {
              "clase": 10,
              "system:index": "42"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30707250093117, -3.399577993038812]),
            {
              "clase": 10,
              "system:index": "43"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.31149278138771, -3.3996636726841936]),
            {
              "clase": 10,
              "system:index": "44"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29316792939797, -3.414743171544698]),
            {
              "clase": 10,
              "system:index": "45"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29934773896828, -3.4130724432602433]),
            {
              "clase": 10,
              "system:index": "46"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30054936860695, -3.407160612163785]),
            {
              "clase": 10,
              "system:index": "47"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.28982053254738, -3.4229682529966334]),
            {
              "clase": 10,
              "system:index": "48"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.27947793458596, -3.4271236058463437]),
            {
              "clase": 10,
              "system:index": "49"
            })]),
    c11_totoral = /* color: #d72fff */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-69.96962504506757, -15.813095174276135]),
            {
              "clase": 11,
              "system:index": "0"
            })]),
    c12_bofedal = /* color: #00ff00 */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-74.98559005504937, -11.399855373752377]),
            {
              "clase": 12,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Point([-75.55738707814496, -11.036896587944213]),
            {
              "clase": 12,
              "system:index": "1"
            })]),
    c13_areas_humedas_costeras = /* color: #ccebc5 */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-76.10184896881482, -14.312496169623012]),
            {
              "clase": 13,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Point([-76.1028360217323, -14.31536540112019]),
            {
              "clase": 13,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Point([-76.1018275111427, -14.316030724926476]),
            {
              "clase": 13,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Point([-71.87179712538452, -17.14039689596638]),
            {
              "clase": 13,
              "system:index": "3"
            }),
        ee.Feature(
            ee.Geometry.Point([-71.87781880029178, -17.13314117366334]),
            {
              "clase": 13,
              "system:index": "4"
            })]),
    c14_glaciar = /* color: #13f5ff */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-74.96559808542669, -11.448957105795413]),
            {
              "clase": 14,
              "system:index": "0"
            })]),
    c15_Agua = /* color: #0000ff */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-69.9822752003953, -15.765820726661403]),
            {
              "clase": 15,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Point([-75.58649261437101, -11.067579207818033]),
            {
              "clase": 15,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.LineString(
                [[-80.28873998546244, -3.4166733458762923],
                 [-80.2886970701182, -3.412517947735509],
                 [-80.29110032939555, -3.4113184480215573],
                 [-80.29410440349223, -3.4090908017246897],
                 [-80.29612142467143, -3.4076342609715597],
                 [-80.29672223949076, -3.4074629030909267]]),
            {
              "clase": 15,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.LineString(
                [[-80.28509218120219, -3.423484732765755],
                 [-80.28238851451518, -3.4243415075630357],
                 [-80.28045732402445, -3.4248555720734473],
                 [-80.2797277631724, -3.425540990991262],
                 [-80.27693826579691, -3.425198281593701],
                 [-80.27376253032328, -3.424427185000604]]),
            {
              "clase": 15,
              "system:index": "3"
            }),
        ee.Feature(
            ee.Geometry.LineString(
                [[-80.25612432384135, -3.413374732328707],
                 [-80.252819842335, -3.415431012234198],
                 [-80.25058824443461, -3.4160735988015385],
                 [-80.24724084758402, -3.417958516917113]]),
            {
              "clase": 15,
              "system:index": "4"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29977689241066, -3.41435761912164]),
            {
              "clase": 15,
              "system:index": "5"
            }),
        ee.Feature(
            ee.Geometry.LineString(
                [[-80.30110726808205, -3.4129439255795404],
                 [-80.30355344270363, -3.4097309779761056]]),
            {
              "clase": 15,
              "system:index": "6"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30182311944411, -3.4273207583395546]),
            {
              "clase": 15,
              "system:index": "7"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30217717103407, -3.427545660896722]),
            {
              "clase": 15,
              "system:index": "8"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.305406550688, -3.427952627294346]),
            {
              "clase": 15,
              "system:index": "9"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30613611154006, -3.428348883883548]),
            {
              "clase": 15,
              "system:index": "10"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.30076096467421, -3.4281989489772045]),
            {
              "clase": 15,
              "system:index": "11"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29848645142958, -3.427952627294346]),
            {
              "clase": 15,
              "system:index": "12"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29708097390578, -3.426646050350837]),
            {
              "clase": 15,
              "system:index": "13"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.3118545811598, -3.428252497160746]),
            {
              "clase": 15,
              "system:index": "14"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.31416128091261, -3.4278990790940247]),
            {
              "clase": 15,
              "system:index": "15"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.3131313126509, -3.428884365499998]),
            {
              "clase": 15,
              "system:index": "16"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.31478930037456, -3.4258564039479924]),
            {
              "clase": 15,
              "system:index": "17"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.31447207986665, -3.423799821471869]),
            {
              "clase": 15,
              "system:index": "18"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.31334555208039, -3.420853368793666]),
            {
              "clase": 15,
              "system:index": "19"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29215441569661, -3.4347118177144433]),
            {
              "clase": 15,
              "system:index": "20"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29178963527059, -3.434219177642865]),
            {
              "clase": 15,
              "system:index": "21"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29214368686056, -3.4330732530148333]),
            {
              "clase": 15,
              "system:index": "22"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29099073823902, -3.430165196435618]),
            {
              "clase": 15,
              "system:index": "23"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.2879437487981, -3.431942990869354]),
            {
              "clase": 15,
              "system:index": "24"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.28713216131376, -3.437839467018522]),
            {
              "clase": 15,
              "system:index": "25"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.28820504491972, -3.4381821718819605]),
            {
              "clase": 15,
              "system:index": "26"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.28344144170927, -3.4370576710879353]),
            {
              "clase": 15,
              "system:index": "27"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.28401007002043, -3.437507471564627]),
            {
              "clase": 15,
              "system:index": "28"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.24491590303083, -3.442546501856968]),
            {
              "clase": 15,
              "system:index": "29"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.2446584109654, -3.4430284281557793]),
            {
              "clase": 15,
              "system:index": "30"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.24642866891523, -3.4412078164142827]),
            {
              "clase": 15,
              "system:index": "31"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29866906604865, -3.4365486596957324]),
            {
              "clase": 15,
              "system:index": "32"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29878171882727, -3.4366557551236996]),
            {
              "clase": 15,
              "system:index": "33"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.2980307003031, -3.4364201451662986]),
            {
              "clase": 15,
              "system:index": "34"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29791804752448, -3.4355205429756417]),
            {
              "clase": 15,
              "system:index": "35"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29905530414679, -3.4376785158551884]),
            {
              "clase": 15,
              "system:index": "36"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29897483787634, -3.437689225385834]),
            {
              "clase": 15,
              "system:index": "37"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29681297741034, -3.434615585154501]),
            {
              "clase": 15,
              "system:index": "38"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29550405941107, -3.434562037327551]),
            {
              "clase": 15,
              "system:index": "39"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.2895026954404, -3.4385927630431663]),
            {
              "clase": 15,
              "system:index": "40"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.28951342427646, -3.439117529400677]),
            {
              "clase": 15,
              "system:index": "41"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.29650088158714, -3.435337250407779]),
            {
              "clase": 15,
              "system:index": "42"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.28030826520904, -3.4440250905709524]),
            {
              "clase": 15,
              "system:index": "43"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.28023316335663, -3.443307556521626]),
            {
              "clase": 15,
              "system:index": "44"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.27984692525848, -3.4427131808922202]),
            {
              "clase": 15,
              "system:index": "45"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.27994348478302, -3.4420010005955155]),
            {
              "clase": 15,
              "system:index": "46"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.26570396288933, -3.4474267222032484]),
            {
              "clase": 15,
              "system:index": "47"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.26383714541497, -3.445766760483833]),
            {
              "clase": 15,
              "system:index": "48"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.26385860308709, -3.444395951203414]),
            {
              "clase": 15,
              "system:index": "49"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.26705579623284, -3.4488296553329643]),
            {
              "clase": 15,
              "system:index": "50"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.26644425257744, -3.4480157401815377]),
            {
              "clase": 15,
              "system:index": "51"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.26407317980828, -3.4461201719312857]),
            {
              "clase": 15,
              "system:index": "52"
            }),
        ee.Feature(
            ee.Geometry.Point([-80.26512460574212, -3.447041182965371]),
            {
              "clase": 15,
              "system:index": "53"
            })]),
    c16_aguas_maritima = /* color: #3b8aff */ee.FeatureCollection([]),
    c17_sin_dato = /* color: #d4d4d4 */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-74.93385597452577, -11.269452584852743]),
            {
              "clase": 17,
              "system:index": "0"
            })]),
    canal_Poligono = 
    /* color: #48d6d3 */
    /* shown: false */
    ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Polygon(
                [[[-80.31224094179318, -3.415636064071027],
                  [-80.31387172487423, -3.4191488646352592],
                  [-80.31610332277462, -3.422747329919841],
                  [-80.31678996828244, -3.426517136196119],
                  [-80.31627498415158, -3.4282306795950106],
                  [-80.31756244447872, -3.4290017731230202],
                  [-80.31739078310177, -3.431058019490745],
                  [-80.31687579897091, -3.4320861410156236],
                  [-80.31344257143185, -3.4306296351955687],
                  [-80.31249843385861, -3.4295158351295973],
                  [-80.31121097353146, -3.4297728660292313],
                  [-80.31081474067467, -3.43022339539056],
                  [-80.31042850257653, -3.429923526142244],
                  [-80.30991351844567, -3.429687914524009],
                  [-80.30808961631554, -3.429687914524009],
                  [-80.30738151313561, -3.429987783846228],
                  [-80.30654466392296, -3.43022339539056],
                  [-80.30751025916832, -3.4310373257331683],
                  [-80.30819690467614, -3.4318726745745036],
                  [-80.30839002372521, -3.4329650527264817],
                  [-80.30886209251183, -3.433736142434505],
                  [-80.30890500785607, -3.43493561407599],
                  [-80.30890500785607, -3.4359637314262255],
                  [-80.30918395759362, -3.4364135324186753],
                  [-80.30939853431481, -3.4370989430470233],
                  [-80.3081539893319, -3.436970428591721],
                  [-80.30772483588952, -3.436349275147018],
                  [-80.30796087028283, -3.434700003693921],
                  [-80.30778920890587, -3.433736142434505],
                  [-80.3065875792672, -3.432193962395922],
                  [-80.30514991523522, -3.4296450760417305],
                  [-80.3037766242196, -3.4290453370882688],
                  [-80.30242479087609, -3.4284455977586368],
                  [-80.30173814536828, -3.4287240482084513],
                  [-80.30072963477868, -3.428938240806985],
                  [-80.29912030936974, -3.4286169518911893],
                  [-80.29778993369835, -3.4281885665022336],
                  [-80.29656684638756, -3.427331795148717],
                  [-80.29461419822472, -3.429366625860125],
                  [-80.29530084373253, -3.4323653158565],
                  [-80.29360568763512, -3.433714723284362],
                  [-80.29579437019127, -3.4345286506522483],
                  [-80.29809034110802, -3.4335433700658746],
                  [-80.2992919707467, -3.4348713567048326],
                  [-80.30040988510126, -3.4382079305527444],
                  [-80.29972323959345, -3.4414207825697356],
                  [-80.29950866287226, -3.442363217106718],
                  [-80.30096778457636, -3.4441195698917926],
                  [-80.30152568405146, -3.444547948128393],
                  [-80.30140823257749, -3.444784940628196],
                  [-80.30192321670835, -3.445523892449213],
                  [-80.30173009765927, -3.4456095679855467],
                  [-80.29990619552915, -3.4440138598554952],
                  [-80.29934829605405, -3.4434676772636332],
                  [-80.29928392303769, -3.443157102708919],
                  [-80.29864019287412, -3.44307142695188],
                  [-80.29748147857968, -3.442964332244716],
                  [-80.29734200371091, -3.442964332244716],
                  [-80.29603308571164, -3.441250815292556],
                  [-80.29560393226926, -3.4410580444425776],
                  [-80.29448813331906, -3.440972368496728],
                  [-80.29191321266477, -3.4420647362291574],
                  [-80.29152030783244, -3.442390383469364],
                  [-80.29066200094768, -3.4426259919512034],
                  [-80.28978223639079, -3.4426688298507275],
                  [-80.28935308294841, -3.4418763283976173],
                  [-80.28868789511272, -3.438813411179517],
                  [-80.2864348395402, -3.438192258935003],
                  [-80.28267974691936, -3.4382350970338207],
                  [-80.28109187918254, -3.441298016110331],
                  [-80.28077001410075, -3.444917816869408],
                  [-80.27961129980632, -3.447145379725658],
                  [-80.27965421515056, -3.448259159197729],
                  [-80.28235788183757, -3.4465456517773987],
                  [-80.28330201941081, -3.445688896909792],
                  [-80.28394574957439, -3.4464599763253623],
                  [-80.28270120459148, -3.448087808594625],
                  [-80.2800404532487, -3.449715638077277],
                  [-80.27959423687007, -3.449778171744611],
                  [-80.27883248950984, -3.449349795863389],
                  [-80.27830677654292, -3.4489535480013873],
                  [-80.27770596172358, -3.4480646670615296],
                  [-80.27802782680537, -3.447250751255342],
                  [-80.27901487972285, -3.445558660903037],
                  [-80.27952986385371, -3.443802310772797],
                  [-80.27901487972285, -3.4413605503308022],
                  [-80.2796371522143, -3.4402681817910716],
                  [-80.28023796703364, -3.4389187836311166],
                  [-80.28191711457536, -3.4352721016486036],
                  [-80.2826252177553, -3.4341154687136513],
                  [-80.28331186326311, -3.433065930208263],
                  [-80.2838697627382, -3.4321877440419897],
                  [-80.28805400880144, -3.430538465401819],
                  [-80.29097225220964, -3.428567894983443],
                  [-80.29320385011003, -3.4262974501194563],
                  [-80.29444839509294, -3.425483515743142],
                  [-80.29637958558367, -3.425612031743315],
                  [-80.29749538453386, -3.4257405477262384],
                  [-80.30255939515398, -3.4264259660103207],
                  [-80.30728008302019, -3.4264259660103207],
                  [-80.30985500367449, -3.4279253167950823],
                  [-80.31212951691911, -3.425997579640291],
                  [-80.31264450104997, -3.4233844186316555],
                  [-80.31242992432878, -3.42214209368418],
                  [-80.31208660157488, -3.4192718885088493],
                  [-80.31097080262468, -3.417858202204674],
                  [-80.31084205659197, -3.4167872263448826],
                  [-80.31105663331316, -3.415801927498258],
                  [-80.31139995606706, -3.4151165016171405]]]),
            {
              "id": 1,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-80.27627056720532, -3.4425536423782526],
                  [-80.27575558307446, -3.445980668510289],
                  [-80.27442520740307, -3.447951202947878],
                  [-80.2741247999934, -3.4484224170998075],
                  [-80.2743393767146, -3.450050246009514],
                  [-80.27453249576367, -3.4508855781833816],
                  [-80.27470415714062, -3.4513567908805634],
                  [-80.27601307513989, -3.4514424658913048],
                  [-80.27708595874584, -3.4519993532727886],
                  [-80.2780515539912, -3.4527704275696505],
                  [-80.27925318362988, -3.4532416393317495],
                  [-80.27963942172802, -3.453691432159245],
                  [-80.28088396671093, -3.4538199443565314],
                  [-80.28167790057934, -3.4535200825358032],
                  [-80.28210705402172, -3.4535415012404265],
                  [-80.28260058048046, -3.453670013458005],
                  [-80.2826434958247, -3.454055550006367],
                  [-80.28086250903881, -3.4542911555977316],
                  [-80.28041189792431, -3.4552335773783494],
                  [-80.28066938998974, -3.456111742286075],
                  [-80.27938192966259, -3.4562188355118892],
                  [-80.27646368625439, -3.455083646703123],
                  [-80.27442520740307, -3.4546981105723433],
                  [-80.2740175116328, -3.4533487328814325],
                  [-80.27307337405956, -3.4523634717687695],
                  [-80.27217215183056, -3.452342053037569],
                  [-80.27152842166699, -3.456026067696707],
                  [-80.27082031848705, -3.455426345354544],
                  [-80.27004784229077, -3.4535415012404265],
                  [-80.26667898776806, -3.4510140907603373],
                  [-80.2645975935725, -3.4489793062510277],
                  [-80.26207028752036, -3.4452377114617985],
                  [-80.26318608647055, -3.443738387876759],
                  [-80.26417313938803, -3.443181495658072],
                  [-80.26636182194419, -3.4434813607393777],
                  [-80.27073918705649, -3.443738387876759],
                  [-80.27206956272788, -3.4445094688725946],
                  [-80.26867925053305, -3.4462229799602184],
                  [-80.26777802830405, -3.4472510851316014],
                  [-80.26812135105796, -3.4485362150330543],
                  [-80.27031003361411, -3.4496071552907352],
                  [-80.27314244633384, -3.448878916046775],
                  [-80.27391492253012, -3.4463943308992655],
                  [-80.27460156803794, -3.4443809554166607],
                  [-80.27520238285727, -3.442624603113708]]]),
            {
              "id": 1,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-80.26288567906089, -3.443310009275909],
                  [-80.26091157322593, -3.4439954149447667],
                  [-80.25958119755454, -3.4446379823111757],
                  [-80.25975285893149, -3.445794602477562],
                  [-80.25932370548911, -3.4462229799602184],
                  [-80.2586370599813, -3.4453662248020613],
                  [-80.2584224832601, -3.44446663105588],
                  [-80.25670586949057, -3.4445094688725946],
                  [-80.2557188165731, -3.4445523066873758],
                  [-80.25563298588462, -3.4454090625782943],
                  [-80.25528966313071, -3.447293922822965],
                  [-80.2549463403768, -3.449350129738923],
                  [-80.25434552555747, -3.4491359417259866],
                  [-80.25447427159018, -3.4481078385922075],
                  [-80.25486050968833, -3.446737032684805],
                  [-80.25456010227866, -3.444980684729238],
                  [-80.25378762608237, -3.4439954149447667],
                  [-80.25211392765708, -3.443267171405226],
                  [-80.25129853611655, -3.4428816304823413],
                  [-80.25044022923178, -3.4434385228764053],
                  [-80.24902402287192, -3.442753116806695],
                  [-80.24786530857749, -3.4412966272709022],
                  [-80.24713574772544, -3.441639330891431],
                  [-80.24606286411948, -3.443310009275909],
                  [-80.24614869480796, -3.4454090625782943],
                  [-80.24580537205405, -3.446994058942928],
                  [-80.24692117100425, -3.4484505397603247],
                  [-80.24902402287192, -3.4493929673357093],
                  [-80.24902402287192, -3.4500783686218646],
                  [-80.24807988529868, -3.449864180773032],
                  [-80.24662076359458, -3.4496071552907352],
                  [-80.24486123448081, -3.4492644545395375],
                  [-80.2434021127767, -3.448836078426822],
                  [-80.24198590641684, -3.449307292140191],
                  [-80.24147092228598, -3.448664727927671],
                  [-80.24353085880942, -3.446822708111893],
                  [-80.24365960484214, -3.4445094688725946],
                  [-80.24421750431723, -3.442795954700507],
                  [-80.24687825566001, -3.439711621422758],
                  [-80.2474361551351, -3.438640670033314],
                  [-80.24941026097007, -3.4393689171090207],
                  [-80.25065480595298, -3.4405255436740476],
                  [-80.25228558903403, -3.4411252754144184],
                  [-80.25305806523032, -3.442924468370365],
                  [-80.25387345677085, -3.44352419860043],
                  [-80.25683461552329, -3.4434385228764053],
                  [-80.25885163670249, -3.4429673062564667],
                  [-80.26395856266684, -3.441939196458268],
                  [-80.26378690128989, -3.443267171405226]]]),
            {
              "id": 1,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-80.23001252537436, -3.4394117551549774],
                  [-80.23069917088218, -3.4401400016416583],
                  [-80.23138581638999, -3.4410395994746117],
                  [-80.2317291391439, -3.441982034388681],
                  [-80.23288785343833, -3.4423675756757137],
                  [-80.23293076878257, -3.443310009275909],
                  [-80.2335315836019, -3.444680820120181],
                  [-80.23383199101157, -3.4462229799602184],
                  [-80.23366032963462, -3.4471654097430995],
                  [-80.23310243015952, -3.446437168629215],
                  [-80.23202954655356, -3.444980684729238],
                  [-80.23099957829184, -3.443052982022895],
                  [-80.22988377934165, -3.4415964929456107],
                  [-80.22928296452231, -3.439497431241115],
                  [-80.22906838780112, -3.438340803428713],
                  [-80.23022710209555, -3.4389833746088234]]]),
            {
              "id": 1,
              "system:index": "3"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-80.24177132969565, -3.4308441076894916],
                  [-80.24095593815512, -3.4308012692590313],
                  [-80.24044095402427, -3.4296446309107367],
                  [-80.24001180058188, -3.4290448919569956],
                  [-80.23915349369712, -3.42840231408912],
                  [-80.23859559422202, -3.427331350016642],
                  [-80.23893891697593, -3.426645932381062],
                  [-80.24022637730307, -3.4265602551420877],
                  [-80.24031220799155, -3.4272885114288085],
                  [-80.24031220799155, -3.4282309599181082],
                  [-80.2421575677938, -3.430330046397191]]]),
            {
              "id": 1,
              "system:index": "4"
            })]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// PASO CLASIFICACION 2023  
 
// Parametros de entrada 
var region = 112, // 101 - 114
    version_input = '2',
    version_out = '2',
    year = 2023,
    months = [1,2,3,4,5,6,7,8,9,10,11,12],
    tileScale = 15,
    cloud_Blue_thr = 1600,  //NO ENMASCAR : 10000, ENMASCAR: 1600
    center_ANP = false,
    Descartar_muestras = [7]; // descartar muestras automaticas;
//---------------------------------

// var palette_1_17 = ["ff9595","b40b0b","ffbd08","4dbb3f","139b01","17ff7e","0f5e00","ffec13","ceb747","ff91fc","70ff41","1af320","00ea67","13f5ff","0021ff","3b8aff","d4d4d4"];
var palette_0_17 = ["ffffff", "ff0000","b40b0b","ffbd08","5bdd4a","139b01","17ff7e","0f5e00","ffec13","ceb747","f8b3ff","d72fff","00ff00","ccebc5","13f5ff","0000ff","3b8aff","d4d4d4"];
var assets_samples = 'projects/ee-anp-lineabase/assets/training_data/samples/';

var area_trabajo = ee.FeatureCollection("projects/ee-eturpocayo/assets/sernanp/AUXILIAR_DATA/limite_anp_y_za_v2")
                      .filter(ee.Filter.eq('Codigo_uni', region));
                      
var lim_ANP = ee.FeatureCollection("projects/ee-eturpocayo/assets/sernanp/AUXILIAR_DATA/limite_anp_v2")
                      .filter(ee.Filter.eq('Codigo_uni', region));
                      
if(center_ANP){Map.centerObject(area_trabajo, 10)}

var area_trabajo_raster = ee.Image("projects/ee-eturpocayo/assets/sernanp/AUXILIAR_DATA/limite_anp_y_za_v2_raster").eq(region);

var mosaic_coll = ee.ImageCollection('projects/ee-anp-lineabase/assets/mosaics')
                    .filterBounds(area_trabajo.geometry().bounds())
                    .map(function(image){
                        var Mapbiomas = ee.Image('projects/mapbiomas-public/assets/peru/collection2/mapbiomas_peru_collection2_integration_v1')
                                          .select('classification_2021')
                        // image = image.updateMask(image.select('B').lte(cloud_Blue_thr).or(Mapbiomas.eq(34)))
                        image = image.updateMask(image.select('B').lte(cloud_Blue_thr).or(Mapbiomas.eq(34).unmask(area_trabajo_raster)))
                        
                        var ndvi = image.normalizedDifference(['N', 'R']).rename('NDVI');
                        var ndwi = image.normalizedDifference(['G', 'N']).rename('NDWI');
                        
                        return image.addBands(ndvi)
                                    .addBands(ndwi)
                    })
                    
                    
// Mapas referencia remap

    // Mapeo de clases Mapbiomas
    //   3: 'Bosque',
    //   4: 'Bosque seco',
    //   5: 'Manglar',
    //   6: 'Bosque inundable',
    //   9: 'Plantación forestal',
    //   11: 'Zona pantanosa o pastizal inundable',
    //   12: 'Pastizal / herbazal',
    //   13: 'Matorral y otras formaciones no boscosas',
    //   15: 'Pasto',
    //   18: 'Agricultura',
    //   21: 'Mosaico agropecuario',
    //   24: 'Infraestructura',
    //   25: 'Otra área sin vegetación',
    //   27: 'No observado',
    //   30: 'Minería',
    //   31: 'Acuicultura',
    //   32: 'Salina',
    //   33: 'Río, lago u océano',
    //   34: 'Glaciar',
    //   35: 'Palma aceitera'
      
  var remap_MB = {
      from: [3, 4, 5, 6, 9, 11, 12, 13, 15, 18, 21, 24, 25, 30, 31, 32, 33, 34],
      to:   [5, 4, 6, 5, 7, 12,  8,  9,  8,  3,  3,  1, 10,  2, 15, 10, 15, 14]
    }

  // Mapeo de clases WorldCover
  //   10: 'Bosque',
  //   20: 'Matorrales',
  //   30: 'Pastizales',
  //   40: 'Tierras de cultivo',
  //   50: 'Construcciones',
  //   60: 'Escasa vegetación',
  //   70: 'Nieve y hielo',
  //   80: 'Cuerpos de agua permanentes',
  //   90: 'Humedales herbáceos',
  //   95: 'Manglares',
  //   100: 'Musgo y líquenes'

  var remap_WC = {
      from: [10, 20, 30, 40, 50, 60, 70, 80, 90, 95, 100],
      to:   [ 7,  9,  8,  3,  1, 10, 14, 15, 12,  6,  17]
    }
    
  var Mapbiomas = ee.Image('projects/mapbiomas-public/assets/peru/collection2/mapbiomas_peru_collection2_integration_v1')
                    .select('classification_2021')
                    .remap(remap_MB.from, remap_MB.to)
                    .updateMask(area_trabajo_raster);
                    
  var WorldCover = ee.ImageCollection('ESA/WorldCover/v200').first()
                     .remap(remap_WC.from, remap_WC.to)
                     .updateMask(area_trabajo_raster);
  
// var updtReference = ee.Image(WorldCover.updateMask(Mapbiomas.eq(WorldCover))).updateMask(area_trabajo_raster)
  
Map.addLayer(Mapbiomas.selfMask(),{min: 0, max: 17, palette: palette_0_17},'Mapbiomas', false)
Map.addLayer(WorldCover.selfMask(),{min: 0, max: 17, palette: palette_0_17},'WorldCover', false)

var tillandsia = ee.Image('users/gistin/fog_oasis/tillandsia')
Map.addLayer(tillandsia,{palette:'#b30adb'},'tillandsia', false)

var fo_class2021 = ee.Image('users/gistin/fog_oasis/fo_class2021')
Map.addLayer(fo_class2021,{"min":1,"max":6,"palette":["ff0000","ffa906","ffee06","89ff0c","27ff02","30df2f"]},'fo_class2021', false)


// Geometrias_colectadas_assets
  var folder = 'projects/ee-anp-lineabase/assets/AUXILIAR-DATA/geometry';
  var list = ee.List([]);
  
  function list_folder_to_featColl(e) {
    var path = e.id;
    var fc = ee.FeatureCollection(path)
              // .aggregate_sum('system:asset_size')
              // .divide(ee.Number(1024).pow(4))
    return fc; 
  }
  
  // Function to recursively concatenate asset lists from multiple pages
  function listAssetsRecursive(folder, pageToken) {
    var options = {};
    if (pageToken !== undefined) {
      options.pageToken = pageToken;
    }
  
    var result = ee.data.listAssets(folder, options);
    var assets = result['assets'];
    list = list.cat(assets.map(list_folder_to_featColl));
  
    if (result.nextPageToken !== null) {
      // Call the function recursively for the next page
      listAssetsRecursive(folder, result.nextPageToken);
    }
  }
  
  // Start listing assets
  listAssetsRecursive(folder);
  
  // Print the final concatenated asset list
  // print('Final Asset List:', list);
  
  var geometry_draw = ee.FeatureCollection(list).flatten();
  
  print(geometry_draw)
  
  // Create buffer 4 m
  var geometry_draw_buf = geometry_draw.map(function(fea){
    return fea.buffer(4)
  })

// GEOMETRIAS CLASE COLL
  var Samples_Collect_raster = geometry_draw_buf
                              .reduceToImage(['clase'], ee.Reducer.first())
                              .updateMask(area_trabajo_raster)
                              .rename('clase');
  Map.addLayer(Samples_Collect_raster, {min: 0, max: 17, palette: palette_0_17}, 'Samples_Collect_raster');
  
  var masks_class = area_trabajo_raster.multiply(0).add(99).where(Samples_Collect_raster.eq(1),1)
                                                            .where(Samples_Collect_raster.eq(2),2)
                                                            .where(Samples_Collect_raster.eq(10),10)
                                                            // .where(Mapbiomas.eq(4),4)
                                                            .rename('mask')




var Samples_Collect = ee.FeatureCollection([
                  c1_area_urbana,
                  // c2_mineria,
                  c3_agricultura,
                  c4_bosque_seco,
                  c5_bosque,
                  c6_manglar,
                  c7_bosque_plantado,
                  c8_pastizales,
                  c9_arbustal_matorral,
                  c10_poca_vegetacion,
                  c11_totoral,
                  c12_bofedal,
                  c13_areas_humedas_costeras,
                  c14_glaciar,
                  c15_Agua,
                  // c16_aguas_maritima,
                  c17_sin_dato,
                  ]).flatten();
// print(Samples_Collect)


// // Geometrias_colectadas_assets
//   var folder = 'projects/ee-anp-lineabase/assets/AUXILIAR-DATA/geometry';
//   var list = ee.List([]);
  
//   function list_folder_to_featColl(e) {
//     var path = e.id;
//     var fc = ee.FeatureCollection(path)
//               // .aggregate_sum('system:asset_size')
//               // .divide(ee.Number(1024).pow(4))
//     return fc; 
//   }
  
//   // Function to recursively concatenate asset lists from multiple pages
//   function listAssetsRecursive(folder, pageToken) {
//     var options = {};
//     if (pageToken !== undefined) {
//       options.pageToken = pageToken;
//     }
  
//     var result = ee.data.listAssets(folder, options);
//     var assets = result['assets'];
//     list = list.cat(assets.map(list_folder_to_featColl));
  
//     if (result.nextPageToken !== null) {
//       // Call the function recursively for the next page
//       listAssetsRecursive(folder, result.nextPageToken);
//     }
//   }
  
//   // Start listing assets
//   listAssetsRecursive(folder);
  
//   // Print the final concatenated asset list
//   // print('Final Asset List:', list);
  
//   var geometry_draw = ee.FeatureCollection(list).flatten();
  
//   print(geometry_draw)

// // GEOMETRIAS CLASE COLL
//   var Samples_Collect_merge = Samples_Collect.merge(geometry_draw)
//                                     .filterBounds(area_trabajo.geometry().bounds())
//   var Samples_Collect_raster = Samples_Collect_merge
//                               .reduceToImage(['clase'], ee.Reducer.first())
//                               .updateMask(area_trabajo_raster)
//                               .rename('clase');
//   Map.addLayer(Samples_Collect_raster, {min: 1, max: 17, 
//   palette: palette_0_17}, 'Samples_Collect_raster');

// // Función para generar el mosaico Planet para un mes y año determinado
// function getPlanetMosaic(year, month) {
//   var startDate = ee.Date.fromYMD(year, month, 1);
//   var endDate = startDate.advance(1, 'month');
//   var collection = ee.ImageCollection('projects/ee-anp-lineabase/assets/mosaics')
//     .filterBounds(area_trabajo.geometry().bounds())
//     .filter(ee.Filter.eq('month', month))
//     // .filterDate(startDate, endDate)
//     .mosaic();
//   return collection;
// }

// // Function for stretch visualization
// function visual(image, geometry, bands, scale, stretch, name, show){
//   typeof scale == 'undefined' ? scale = 100 : null;
//   typeof stretch == 'undefined' ? stretch = [2, 98] : null;
//   typeof name == 'undefined' ? name = 'Layer ' + Map.layers().length() : null;
//   typeof show == 'undefined' ? show = true : null;
  
//   var minMax = image.select(bands).reduceRegion({
//     reducer: ee.Reducer.percentile(stretch),
//     scale: scale,
//     geometry: geometry,
//     bestEffort: true
//   });
  
//   var scaled = ee.Image(bands.map(function(band){
//     var imageBand = image.select(band);
//     var min = ee.Number(minMax.get(band + '_p' + Math.round(stretch[0])));
//     var max = ee.Number(minMax.get(band + '_p' + Math.round(stretch[1])));
    
//     return imageBand.unitScale(min, max).rename(band);
//   }));
//   Map.addLayer(scaled, { min: 0, max: 1, bands: bands}, name, show);
// }

var altitude = ee.Image("USGS/SRTMGL1_003");
var slope = ee.Terrain.slope(altitude).int8()
    .rename('slope');

// Combinacion de bandas para color natural
var RGB = {bands: ['R', 'N', 'B'], gain: [0.3, 0.06, 0.2]}; // ANDES

// var RGB = {bands: ['R', 'N', 'B'], gain: [0.2, 0.06, 0.2]}; // ANDES
// var RGB = {bands: ['R', 'G', 'B'], min:630, max:2950}; //COSTA

var zona_Canal = canal_Poligono
                              .reduceToImage(['id'], ee.Reducer.first())
                              .updateMask(area_trabajo_raster)
                              .rename('zcanal');
var zcanal = area_trabajo_raster.multiply(0).add(1).where(zona_Canal.eq(1),2).rename('zcanal');

var clasificacion =  ee.Image([]).select([])

months.forEach(function(month){
  
  var mosaic_month = mosaic_coll.filter(ee.Filter.eq('month', month)).first().updateMask(area_trabajo_raster)
  
  Map.addLayer(mosaic_month, RGB, "Mosaic_Planet_Month"+month, false);


  var asset_samples_random = ee.FeatureCollection(assets_samples + 'samples-'+ region +'-' + year + '-month'+ month +'-'+version_input);
      // asset_samples_random = asset_samples_random.filter(ee.Filter.neq('clase', Descartar_muestras))
      asset_samples_random = asset_samples_random.filter(ee.Filter.inList('clase', Descartar_muestras).not())
                                                .filter(ee.Filter.and(ee.Filter.eq('clase', 1),ee.Filter.gte('NDVI', 0.5)).not())
                                                .filter(ee.Filter.and(ee.Filter.eq('clase', 15),ee.Filter.lte('NDWI', -0.2)).not())

  // APLICAR DELETE OUTLAYER
    // Obtenemos las clases únicas
    var clases = asset_samples_random.aggregate_array('clase').distinct();
  
    // Aplicamos la función a cada clase y unimos los resultados
    var puntosFiltrados = ee.FeatureCollection(
      clases.map(function(clase) {
        return filtrarOutliers(clase, asset_samples_random, 'NDVI');
      })//.flatten()
    ).flatten();
    
    asset_samples_random = puntosFiltrados;

  // Select_random
    // Agregar una columna aleatoria a la colección
    var randomFC = asset_samples_random.randomColumn('random',2);
    
    // Ordenar la colección por la columna aleatoria
    var sortedFC = randomFC.sort('random');
    
    
    // Seleccionar los primeros N elementos
    asset_samples_random = sortedFC.limit(1000);
    
    var styledPoints = ee.FeatureCollection(asset_samples_random).map(
    function(point) {
      var classId = point.get('clase'),
          color = ee.List(palette_0_17).get(classId);
      
      return point.set({ style: { color: color } });
    }
      );
    if(month == 12){
    // Map.addLayer(asset_samples_random) 
    Map.addLayer(
      styledPoints.style({
        styleProperty: "style",
        width: 1.5,
      }), {}, 'MUESTRAS DE ENTRENAMIENTO automatico', false
    );
    }
    
    

  // Segmentación usando SNIC
  var snic = ee.Algorithms.Image.Segmentation.SNIC({
    image: mosaic_month,
    size: 15,
    compactness: 0,
    connectivity: 8,
    neighborhoodSize: 256 
  }).select(['clusters'], ['segments']);
  
  // Map.addLayer(snic.randomVisualizer(),{},'snic', false)
  
  // Reproyecta la imagen a una resolución fija (por ejemplo, 30 metros)
  var fixedResolutionSegments = snic.reproject({
    crs: mosaic_month.projection(),
    scale: 4.7  // Ajusta según la resolución de tu imagen
  });
  
  // Muestra la imagen con resolución fija en el mapa
  // Map.addLayer(fixedResolutionSegments.randomVisualizer(), {}, 'SNIC Segments (Fixed Resolution)_Month'+month,false);
  
  // Añadir segmentación como banda
  var mosaic_month_segm = mosaic_month.addBands(fixedResolutionSegments)
                                      .addBands(slope)
                                      .addBands(masks_class)
                                      .addBands(zcanal);
  
  // Definir bandas para el clasificador, incluyendo NDVI y segmentos
  var bandas = ['R', 'G', 'B', 'N', 'NDVI', 'NDWI','segments', 'slope','mask','zcanal']; //, 'segments'
  
  // Muestreo de regiones y entrenamiento del clasificador
  var Samples_month = Samples_Collect.merge(asset_samples_random)
  
  var entrenamiento = mosaic_month_segm.sampleRegions({
    collection: Samples_month,
    properties: ['clase'],
    scale: 5
  }).filter(ee.Filter.notNull(bandas));
  
  // Verificar la cantidad de muestras
  // print(entrenamiento.limit(2))
  // print('# de muestras de entrenamiento:'+month, entrenamiento.size());
  
  // Entrenar el clasificador Random Forest
  var clasificador = ee.Classifier.smileRandomForest(50).train({
    features: entrenamiento,
    classProperty: 'clase',
    inputProperties: bandas
  });
  

  
  // Clasificar la imagen usando el clasificador entrenado
  var imagenClasificada_month = mosaic_month_segm.classify(clasificador);
  
  
  // imagenClasificada_month = imagenClasificada_month.where(zona_Canal.eq(1).and(mosaic_month_segm.select('NDWI').gte(-0.7)),15)
  
    clasificacion = clasificacion.addBands(imagenClasificada_month.rename('clasificacion_'+month));
    
  // Añadir la imagen clasificada al mapa
  
  Map.addLayer(imagenClasificada_month, {min: 0, max: 17, 
  palette: palette_0_17}, 'clasificacion'+month, false);
  
  if(month == 12){
  Map.addLayer(asset_samples_random,{},'samples_random', false)
  }

  
})

// print(clasificacion)

// Map.addLayer(Samples_Collect,{},'Samples_Collect')
// Mostrar Limite de ANP seleccionado
var styling = {color: 'black', fillColor: '00000000'};
Map.addLayer(area_trabajo.style(styling),{},'area_trabajo');

// Exportar to assets
var filenameExport = 'clasificacion'+ '-' + region + '-' + version_out;

clasificacion = clasificacion.set('region', region)
                             .set('version', version_out)


Export.image.toAsset({
  image: clasificacion.byte(),
  description: filenameExport,
  assetId: 'projects/ee-anp-lineabase/assets/clasificacion/' + filenameExport,
  scale: 4.7,
  pyramidingPolicy: {
    '.default': 'mode'
  },
  maxPixels: 1e13,
  region: area_trabajo.geometry().bounds()
});



// ACTUALIZAR REFERENCIAS
// updtReference = updtReference.blend(ee.Image(Samples_Collect_raster)).rename('clase');
// updtReference = ee.Image(updtReference).byte(),

// Map.addLayer(updtReference.selfMask(),{min: 1, max: 17, palette: palette_0_17},'updtReference')


// // AREA CLASE
//   var classAreas = getAreas(updtReference, [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17], area_trabajo);
  
//   print('Capa de áreas por clase', classAreas);
  
//   var classAreasDictionary = classAreas.first().toDictionary();
  
//   print(classAreasDictionary)

//   var classNames = classAreasDictionary.keys()
//     .filter(ee.Filter.stringContains('item', 'ID'))
//     .filter(ee.Filter.notEquals('item', 'ORIG_FID'));
  
//   print(classNames)
  
//   // Generar muestras de entrenamiento con base en el área de cada clase de cobertura
//   var classIds = classNames.map(
//     function(name) {
//       var classId = ee.String(name).split('D').get(1);
//       return ee.Number.parse(classId);
//     }
//   );
//   print(classIds)
//   // Calcular áreas de cada clase y total 
//   var areas = classNames.map( function(name) {
//     return classAreasDictionary.get(name);
//   });
  
//   var totalArea = areas.reduce(ee.Reducer.sum());


//   // Calcular numero ponderado de muestras y generar puntos de entrenamiento
//   var pointsPerClass = areas.map(
//     function(area) {
//       return getPointsByArea(
//         area, totalArea, muestras_x_clase, min_muestras_x_clase);
//     });
//   print(pointsPerClass)
  
//   var training = getSamples(updtReference, mosaic_coll, classIds, pointsPerClass);
//   var points = training.points;
//   var data = training.data;
//   print('points',points)
//   Map.addLayer(points,{},'points')

// // Exportar muestras
// var filename = 'samples-' + region + '-'  +   year + '-' + version_out;

// Export.table.toAsset(
//   points,
//   filename,
//   'projects/ee-anp-lineabase/assets/training_data/samples/' + filename
// );

/**
 * Función para eliminar outlayers basado en ee.Reducer.percentile([25, 75])
 * Función para calcular el rango intercuartil y filtrar los outliers
 * 
 */
function filtrarOutliers(clase, puntos, variable) {
    // Filtramos solo la clase actual
    var puntosClase = puntos.filter(ee.Filter.eq('clase', clase));
    
    // Calculamos los percentiles para NDVI
    var stats = puntosClase.reduceColumns({
      reducer: ee.Reducer.percentile([25, 75]),
      selectors: [variable]
    });
    
    // Extraemos los percentiles
    var p25 = ee.Number(stats.get('p25'));
    var p75 = ee.Number(stats.get('p75'));
    var rangoIntercuartil = p75.subtract(p25);
    
    // Establecemos los límites para filtrar outliers
    var limiteInferior = p25.subtract(rangoIntercuartil.multiply(1));
    var limiteSuperior = p75.add(rangoIntercuartil.multiply(1));
    
    // Filtramos los puntos dentro del rango
    return puntosClase.filter(ee.Filter.rangeContains(variable, limiteInferior, limiteSuperior));
}


/**
 * Función para calcular numero de muestras de entrenamiento con base en el área
 * que ocupa cada clase
 */
function getPointsByArea(singleArea, totalArea, sampleSize, minSamples) {
  return ee.Number(singleArea)
    .divide(totalArea)
    .multiply(sampleSize)
    .round()
    .int16()
    .max(minSamples);
}


/**
 * Función para calcular áreas (en Km2) por clase, con base en la imágen
 * de pixeles estables.
 */
function getAreas(image, classes, region){
  
  var reducer = {
      reducer: ee.Reducer.sum(),
      geometry: region.geometry(), 
      scale: 10,
      maxPixels: 1e13
  };
  
  var propFilter = ee.Filter.neq('item', 'OBJECTID');
  
  classes.forEach( function( classId, i ) {
      var imageArea = ee.Image.pixelArea()
        .divide(10000)  //has
        .mask(image.eq(classId))
        .reduceRegion(reducer);
      
      var area = ee.Number(imageArea.get('area')).round();
          
      region = region.map(function(item){
        var props = item.propertyNames();
        var selectProperties = props.filter(propFilter);
        
        return item
          .select(selectProperties)
          .set('ID' + classId.toString(), area);
      });
      
      return region;
  });
  
  return region;
  
}


/**
 * Función para implementar la colecta de puntos todos los años de la lista param.year
 * definida en los parámetros de usuario.
 */
function getSamples(referencePixels, mosaic_coll, classIds, pointsPerClass) {
  
  var list_months = ee.List(months);
  
  var keys = list_months.map( function(month) {
    var stringMonth = ee.String(month);
    return ee.String('samples-').cat(stringMonth);
  });
  
  var points = referencePixels
    .addBands(ee.Image.pixelLonLat())
    .stratifiedSample({
        numPoints: 0,
        classBand: 'clase',
        region: area_trabajo.geometry().bounds(),
        scale: 4.7,
        seed: 1,
        geometries: true,
        dropNulls: true,
        classValues: classIds, 
        classPoints: pointsPerClass,
        tileScale: tileScale
    });

  var monthMosaic;
  
  var trainingSamples = list_months.map( function(month) {
    monthMosaic = mosaic_coll
      .filterMetadata('month', 'equals', month)
      .mosaic();
    
    var training = referencePixels
      .addBands(monthMosaic)
      .sampleRegions({
        collection: points,
        properties: ['clase'],
        scale: 4.7,
        geometries: true,
        tileScale: tileScale
      });
    
    return training;
    
  });
  
  return {
    data: ee.Dictionary.fromLists(keys, trainingSamples),
    points: points
  };

}



// // Validación
// var muestras_validadas = Manglar_V.merge(BosqueSeco_V).merge(Suelo_V).merge(Agua_V);

// var validacion = imagenClasificada.sampleRegions({
//   collection: muestras_validadas,
//   properties: ['Class'],
//   scale: 5
// });

// var matrizConfusion = validacion.errorMatrix('Class', 'classification');

// print('Matriz de Confusión', matrizConfusion);
// print('Exactitud General', matrizConfusion.accuracy());
// print('Kappa', matrizConfusion.kappa());

// Exportar la imagen resultante
// Export.image.toDrive({
//   image: imagenClasificada,
//   description: 'imagenClasificada',
//   scale: 5,  // Ajusta esta escala según la resolución espacial de tus imágenes
//   region: area_trabajo,
//   maxPixels: 1e13,
//   fileFormat: 'GeoTIFF'
// });


// // Exportar imagen color natural
// Export.image.toDrive({
//   image: NICFIAmerica_CLIP.select("R","G","B"),
//   description: "Imagen_Planet", 
//   scale: 4.7,
//   maxPixels: 1e13,
//   region: LimiteSelect
// });



function Legend() {
  
  var legendColors = [
          {color: palette_0_17[1], label:'c1_area_urbana y carret'},
          {color: palette_0_17[2], label:'c2_mineria'},
          {color: palette_0_17[3], label:'c3_agricultura'},
          {color: palette_0_17[4], label:'c4_bosque_seco'},
          {color: palette_0_17[5], label:'c5_bosque'},
          {color: palette_0_17[6], label:'c6_manglar'},
          {color: palette_0_17[7], label:'c7_bosque_plantado'},
          {color: palette_0_17[8], label:'c8_pastizales'},
          {color: palette_0_17[9], label:'c9_arbustal_matorral'},
          {color: palette_0_17[10], label:'c10_poca_vegetacion'},
          {color: palette_0_17[11], label:'c11_totoral'},
          {color: palette_0_17[12], label:'c12_bofedal'},
          {color: palette_0_17[13], label:'c13_areas_humedas_costeras'},
          {color: palette_0_17[14], label:'c14_glaciar'},
          {color: palette_0_17[15], label:'c15_Agua'},
          {color: palette_0_17[16], label:'c16_aguas_maritima'},
          {color: palette_0_17[17], label:'c17_sin_dato'},
  ];

  // Crear un panel para la leyenda
  var legendPanel = ui.Panel({
    style: {
      position: 'bottom-left',
      padding: '8px 15px'
    }
  });

  // Crear un título para la leyenda
  var legendTitle = ui.Label({
    value: 'Leyenda general',
    style: {fontWeight: 'bold', fontSize: '16px', margin: '0 0 4px 0'}
  });

  legendPanel.add(legendTitle);

  // Crear un panel de cuadrícula para organizar en columnas
  var gridPanel = ui.Panel({
    layout: ui.Panel.Layout.Flow('horizontal'),
    style: {stretch: 'horizontal'}
  });

  // Número de columnas deseadas
  var columns = 2;

  // Crear un array de columnas como paneles
  var columnPanels = [];
  for (var i = 0; i < columns; i++) {
    columnPanels.push(ui.Panel({
      layout: ui.Panel.Layout.Flow('vertical'),
      style: {padding: '0 10px'}
    }));
  }

  // Añadir elementos a las columnas alternando entre ellas
  legendColors.forEach(function(item, index) {
    var colorBox = ui.Label('', {
      backgroundColor: item.color,
      padding: '6px',
      margin: '0 0 4px 0'
    });

    var description = ui.Label(item.label, {
      margin: '0 0 4px 6px'
    });

    var legendItem = ui.Panel({
      widgets: [colorBox, description],
      layout: ui.Panel.Layout.Flow('horizontal')
    });

    // Añadir a la columna correspondiente
    columnPanels[index % columns].add(legendItem);
  });

  // Añadir todas las columnas al panel de cuadrícula
  columnPanels.forEach(function(panel) {
    gridPanel.add(panel);
  });

  // Añadir el panel de cuadrícula a la leyenda
  legendPanel.add(gridPanel);

  return legendPanel;
}

var legend_MB = Legend();
Map.add(legend_MB);  // Añadir la leyenda al mapa

Map.addLayer(lim_ANP.style({color: 'black', fillColor:'00000000'}), {},'anp')
